# HTTP блок для healzy.uz - перенаправляет на HTTPS
server {
    listen 80;
    listen [::]:80;
    server_name healzy.uz www.healzy.uz;
    
    # Перенаправляем все HTTP запросы на HTTPS
    return 301 https://$host$request_uri;
}

# Основной HTTPS блок для healzy.uz
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name healzy.uz www.healzy.uz;

    # Увеличиваем лимит размера загружаемых файлов
    client_max_body_size 50M;
    client_body_buffer_size 32k;
    client_body_timeout 60s;

    # SSL настройки
    ssl_certificate /etc/letsencrypt/live/healzy.uz/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/healzy.uz/privkey.pem;
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

    # Корневая директория фронтенда
    root /var/www/healzy.app/frontend/dist;
    index index.html index.htm;

    # Обслуживание загруженных файлов (фото, документы)
    location /uploads/ {
        alias /var/www/healzy.app/backend/uploads/;
        expires 1y;
        add_header Cache-Control "public, immutable";
        add_header Access-Control-Allow-Origin "*";
        
        # Разрешаем только изображения и PDF файлы
        location ~* \.(jpg|jpeg|png|gif|pdf|doc|docx)$ {
            try_files $uri =404;
        }
    }

    # Специальные эндпоинты FastAPI БЕЗ /api префикса (для совместимости)
    location ~ ^/(token|auth|register|verify-email|users|ws-token|status|cleanup-pending|setup_admin_m5kL9sP2q7|resend-verification|csrf-token|admin|notifications)(/.*)?$ {
        proxy_pass http://localhost:8000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Таймауты
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
        
        # Обработка CORS для OPTIONS запросов
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' '*';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS';
            add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type, Accept, Origin, User-Agent, DNT, Cache-Control, X-Mx-ReqToken, Keep-Alive, X-Requested-With, If-Modified-Since';
            add_header 'Access-Control-Max-Age' 1728000;
            add_header 'Content-Type' 'text/plain charset=UTF-8';
            add_header 'Content-Length' 0;
            return 204;
        }
    }

    # Проксирование API запросов к бэкенду С /api префиксом
    location /api/ {
        proxy_pass http://localhost:8000/api/;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Увеличиваем таймауты для загрузки файлов
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
    }

    # WebSocket соединения
    location /ws/ {
        proxy_pass http://localhost:8000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_read_timeout 86400;
        proxy_send_timeout 86400;
        proxy_connect_timeout 60s;
    }

    # SPA роутинг для фронтенда (должно быть в конце)
    location / {
        try_files $uri $uri/ /index.html;
        
        # Кеширование статических ресурсов
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
            try_files $uri =404;
        }
    }

    # Логи
    access_log /var/log/nginx/healzy.uz_access.log;
    error_log /var/log/nginx/healzy.uz_error.log;
} 