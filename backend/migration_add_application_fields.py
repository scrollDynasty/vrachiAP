#!/usr/bin/env python3
"""
–ú–∏–≥—Ä–∞—Ü–∏—è –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø–æ–ª–µ–π city, district –∏ languages –≤ —Ç–∞–±–ª–∏—Ü—É doctor_applications
"""

import os
import sys
from sqlalchemy import create_engine, text, MetaData, inspect
from dotenv import load_dotenv

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv()

# –ü–æ–ª—É—á–∞–µ–º URL –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
DATABASE_URL = os.getenv(
    "DATABASE_URL", "mysql+pymysql://vrachi_user:1435511926Ss..@localhost:3306/online_doctors_db"
)

def run_migration():
    """–ó–∞–ø—É—Å–∫–∞–µ–º –º–∏–≥—Ä–∞—Ü–∏—é"""
    print("üîÑ –ù–∞—á–∏–Ω–∞–µ–º –º–∏–≥—Ä–∞—Ü–∏—é –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø–æ–ª–µ–π –≤ doctor_applications...")
    
    try:
        # –°–æ–∑–¥–∞–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
        engine = create_engine(DATABASE_URL)
        
        with engine.connect() as connection:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã
            inspector = inspect(engine)
            if 'doctor_applications' not in inspector.get_table_names():
                print("‚ùå –¢–∞–±–ª–∏—Ü–∞ doctor_applications –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
                return False
            
            # –ü–æ–ª—É—á–∞–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –∫–æ–ª–æ–Ω–∫–∏
            existing_columns = [col['name'] for col in inspector.get_columns('doctor_applications')]
            print(f"üìã –°—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –∫–æ–ª–æ–Ω–∫–∏: {existing_columns}")
            
            # –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª–µ city –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
            if 'city' not in existing_columns:
                print("‚ûï –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª–µ city...")
                connection.execute(text("""
                    ALTER TABLE doctor_applications 
                    ADD COLUMN city VARCHAR(255) NULL 
                    COMMENT '–ì–æ—Ä–æ–¥/—Ä–µ–≥–∏–æ–Ω —Ä–∞–±–æ—Ç—ã –≤—Ä–∞—á–∞'
                """))
                print("‚úÖ –ü–æ–ª–µ city –¥–æ–±–∞–≤–ª–µ–Ω–æ")
            else:
                print("‚ÑπÔ∏è –ü–æ–ª–µ city —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
            
            # –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª–µ district –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
            if 'district' not in existing_columns:
                print("‚ûï –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª–µ district...")
                connection.execute(text("""
                    ALTER TABLE doctor_applications 
                    ADD COLUMN district VARCHAR(255) NULL 
                    COMMENT '–†–∞–π–æ–Ω —Ä–∞–±–æ—Ç—ã –≤—Ä–∞—á–∞'
                """))
                print("‚úÖ –ü–æ–ª–µ district –¥–æ–±–∞–≤–ª–µ–Ω–æ")
            else:
                print("‚ÑπÔ∏è –ü–æ–ª–µ district —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
            
            # –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª–µ languages –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
            if 'languages' not in existing_columns:
                print("‚ûï –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª–µ languages...")
                connection.execute(text("""
                    ALTER TABLE doctor_applications 
                    ADD COLUMN languages JSON NULL 
                    COMMENT '–Ø–∑—ã–∫–∏ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–π (JSON –º–∞—Å—Å–∏–≤)'
                """))
                print("‚úÖ –ü–æ–ª–µ languages –¥–æ–±–∞–≤–ª–µ–Ω–æ")
            else:
                print("‚ÑπÔ∏è –ü–æ–ª–µ languages —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
            
            # –ö–æ–º–º–∏—Ç–∏–º –∏–∑–º–µ–Ω–µ–Ω–∏—è
            connection.commit()
            
            print("üéâ –ú–∏–≥—Ä–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")
            return True
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –º–∏–≥—Ä–∞—Ü–∏–∏: {e}")
        return False

if __name__ == "__main__":
    success = run_migration()
    sys.exit(0 if success else 1) 