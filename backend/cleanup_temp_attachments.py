#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –≤–ª–æ–∂–µ–Ω–∏–π —Å message_id=0
"""
import os
import sys
from sqlalchemy import create_engine, text
from sqlalchemy.orm import sessionmaker
from dotenv import load_dotenv

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∏–∑ .env —Ñ–∞–π–ª–∞
load_dotenv()

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –ø—Ä–æ–µ–∫—Ç—É
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from models import MessageAttachment

DATABASE_URL = os.getenv("DATABASE_URL")
if not DATABASE_URL:
    print("‚ùå –û—à–∏–±–∫–∞: DATABASE_URL –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ .env —Ñ–∞–π–ª–µ!")
    sys.exit(1)

def cleanup_temp_attachments():
    """–£–¥–∞–ª—è–µ—Ç –≤—Ä–µ–º–µ–Ω–Ω—ã–µ –≤–ª–æ–∂–µ–Ω–∏—è —Å message_id=0"""
    
    print(f"üîå –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –ë–î: {DATABASE_URL}")
    
    # –°–æ–∑–¥–∞–µ–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö
    engine = create_engine(DATABASE_URL)
    SessionLocal = sessionmaker(autocommit=False, autoflush=False, bind=engine)
    db = SessionLocal()
    
    try:
        # –ù–∞—Ö–æ–¥–∏–º –≤—Å–µ –≤—Ä–µ–º–µ–Ω–Ω—ã–µ –≤–ª–æ–∂–µ–Ω–∏—è
        temp_attachments = db.query(MessageAttachment).filter(
            MessageAttachment.message_id == 0
        ).all()
        
        print(f"–ù–∞–π–¥–µ–Ω–æ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –≤–ª–æ–∂–µ–Ω–∏–π: {len(temp_attachments)}")
        
        if temp_attachments:
            print("\n–°–ø–∏—Å–æ–∫ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –≤–ª–æ–∂–µ–Ω–∏–π:")
            for att in temp_attachments:
                print(f"ID: {att.id}, –§–∞–π–ª: {att.filename}, –ü—É—Ç—å: {att.file_path}")
            
            # –°–ø—Ä–∞—à–∏–≤–∞–µ–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ
            confirm = input(f"\n–£–¥–∞–ª–∏—Ç—å {len(temp_attachments)} –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –≤–ª–æ–∂–µ–Ω–∏–π? (y/N): ")
            
            if confirm.lower() == 'y':
                # –£–¥–∞–ª—è–µ–º —Ñ–∏–∑–∏—á–µ—Å–∫–∏–µ —Ñ–∞–π–ª—ã
                files_deleted = 0
                for att in temp_attachments:
                    try:
                        # –§–æ—Ä–º–∏—Ä—É–µ–º –ø–æ–ª–Ω—ã–π –ø—É—Ç—å –∫ —Ñ–∞–π–ª—É
                        file_path = att.file_path.replace('/uploads/consultation_files/', 'uploads/consultation_files/')
                        if os.path.exists(file_path):
                            os.remove(file_path)
                            files_deleted += 1
                            print(f"–£–¥–∞–ª–µ–Ω —Ñ–∞–π–ª: {file_path}")
                    except Exception as e:
                        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —Ñ–∞–π–ª–∞ {att.file_path}: {e}")
                
                # –£–¥–∞–ª—è–µ–º –∑–∞–ø–∏—Å–∏ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
                deleted_count = db.query(MessageAttachment).filter(
                    MessageAttachment.message_id == 0
                ).delete()
                
                db.commit()
                
                print(f"\n–†–µ–∑—É–ª—å—Ç–∞—Ç:")
                print(f"- –£–¥–∞–ª–µ–Ω–æ –∑–∞–ø–∏—Å–µ–π –∏–∑ –ë–î: {deleted_count}")
                print(f"- –£–¥–∞–ª–µ–Ω–æ —Ñ–∏–∑–∏—á–µ—Å–∫–∏—Ö —Ñ–∞–π–ª–æ–≤: {files_deleted}")
                print("–û—á–∏—Å—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")
            else:
                print("–û—á–∏—Å—Ç–∫–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞.")
        else:
            print("–í—Ä–µ–º–µ–Ω–Ω—ã—Ö –≤–ª–æ–∂–µ–Ω–∏–π –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.")
            
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—á–∏—Å—Ç–∫–µ: {e}")
        db.rollback()
    finally:
        db.close()

if __name__ == "__main__":
    cleanup_temp_attachments() 