#!/usr/bin/env python3
# -*- coding: utf-8 -*-

"""
–ú–∏–≥—Ä–∞—Ü–∏—è –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø–æ–ª–µ–π –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏—è –≤ —Ç–∞–±–ª–∏—Ü—É patient_profiles
–î–æ–±–∞–≤–ª—è–µ—Ç –∫–æ–ª–æ–Ω–∫–∏: city, district, country
"""

import pymysql
import sys
from dotenv import load_dotenv
import os

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv()

def get_db_connection():
    """–ü–æ–ª—É—á–∏—Ç—å —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö"""
    try:
        # –ü–æ–ø—Ä–æ–±—É–µ–º –∏–∑–≤–ª–µ—á—å –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∏–∑ DATABASE_URL
        database_url = os.getenv("DATABASE_URL")
        if database_url and "mysql+pymysql://" in database_url:
            # –ü–∞—Ä—Å–∏–º DATABASE_URL –≤–∏–¥–∞ mysql+pymysql://user:password@host:port/database
            url_parts = database_url.replace("mysql+pymysql://", "").split("@")
            if len(url_parts) == 2:
                auth_part = url_parts[0]
                host_db_part = url_parts[1]
                
                if ":" in auth_part:
                    user, password = auth_part.split(":", 1)
                else:
                    user = auth_part
                    password = ""
                
                if "/" in host_db_part:
                    host_port, database = host_db_part.split("/", 1)
                    if ":" in host_port:
                        host, port = host_port.split(":", 1)
                        port = int(port)
                    else:
                        host = host_port
                        port = 3306
                else:
                    host = host_db_part
                    port = 3306
                    database = "healzy_db"
            else:
                raise ValueError("–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç DATABASE_URL")
        else:
            # –ò—Å–ø–æ–ª—å–∑—É–µ–º –æ—Ç–¥–µ–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–ª–∏ –∑–Ω–∞—á–µ–Ω–∏—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
            host = os.getenv("DB_HOST", "localhost")
            port = int(os.getenv("DB_PORT", "3306"))
            user = os.getenv("DB_USER", "healzy_user")
            password = os.getenv("DB_PASSWORD", "healzy_password_123")
            database = os.getenv("DB_NAME", "healzy_db")

        print(f"–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö: {host}:{port}, database: {database}, user: {user}")
        
        connection = pymysql.connect(
            host=host,
            port=port,
            user=user,
            password=password,
            database=database,
            charset='utf8mb4'
        )
        return connection
    except Exception as e:
        sys.exit(1)

def check_column_exists(cursor, table_name, column_name):
    """–ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ –∫–æ–ª–æ–Ω–∫–∞ –≤ —Ç–∞–±–ª–∏—Ü–µ"""
    cursor.execute(f"""
        SELECT COUNT(*) 
        FROM INFORMATION_SCHEMA.COLUMNS 
        WHERE TABLE_SCHEMA = DATABASE() 
        AND TABLE_NAME = '{table_name}' 
        AND COLUMN_NAME = '{column_name}'
    """)
    return cursor.fetchone()[0] > 0

def add_patient_location_fields():
    """–î–æ–±–∞–≤–∏—Ç—å –ø–æ–ª—è –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏—è –≤ —Ç–∞–±–ª–∏—Ü—É patient_profiles"""
    connection = get_db_connection()
    
    try:
        with connection.cursor() as cursor:
            print("–ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –∫–æ–ª–æ–Ω–∫–∏ –≤ —Ç–∞–±–ª–∏—Ü–µ patient_profiles...")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã
            cursor.execute("SHOW TABLES LIKE 'patient_profiles'")
            if cursor.fetchone() is None:
                print("–¢–∞–±–ª–∏—Ü–∞ patient_profiles –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!")
                return False
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏ –¥–æ–±–∞–≤–ª—è–µ–º –∫–æ–ª–æ–Ω–∫—É city
            if not check_column_exists(cursor, 'patient_profiles', 'city'):
                print("–î–æ–±–∞–≤–ª—è–µ–º –∫–æ–ª–æ–Ω–∫—É 'city'...")
                cursor.execute("""
                    ALTER TABLE patient_profiles 
                    ADD COLUMN city VARCHAR(255) DEFAULT NULL 
                    COMMENT '–ì–æ—Ä–æ–¥/–æ–±–ª–∞—Å—Ç—å/—Ä–µ—Å–ø—É–±–ª–∏–∫–∞ –ø–∞—Ü–∏–µ–Ω—Ç–∞'
                """)
                print("‚úì –ö–æ–ª–æ–Ω–∫–∞ 'city' –¥–æ–±–∞–≤–ª–µ–Ω–∞")
            else:
                print("‚úì –ö–æ–ª–æ–Ω–∫–∞ 'city' —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏ –¥–æ–±–∞–≤–ª—è–µ–º –∫–æ–ª–æ–Ω–∫—É country
            if not check_column_exists(cursor, 'patient_profiles', 'country'):
                print("–î–æ–±–∞–≤–ª—è–µ–º –∫–æ–ª–æ–Ω–∫—É 'country'...")
                cursor.execute("""
                    ALTER TABLE patient_profiles 
                    ADD COLUMN country VARCHAR(255) DEFAULT '–£–∑–±–µ–∫–∏—Å—Ç–∞–Ω' 
                    COMMENT '–°—Ç—Ä–∞–Ω–∞ –ø–∞—Ü–∏–µ–Ω—Ç–∞'
                """)
                print("‚úì –ö–æ–ª–æ–Ω–∫–∞ 'country' –¥–æ–±–∞–≤–ª–µ–Ω–∞")
            else:
                print("‚úì –ö–æ–ª–æ–Ω–∫–∞ 'country' —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ –∫–æ–ª–æ–Ω–∫–∏ district (–¥–æ–ª–∂–Ω–∞ —É–∂–µ –±—ã—Ç—å)
            if not check_column_exists(cursor, 'patient_profiles', 'district'):
                print("–î–æ–±–∞–≤–ª—è–µ–º –∫–æ–ª–æ–Ω–∫—É 'district'...")
                cursor.execute("""
                    ALTER TABLE patient_profiles 
                    ADD COLUMN district VARCHAR(255) DEFAULT NULL 
                    COMMENT '–†–∞–π–æ–Ω –ø–∞—Ü–∏–µ–Ω—Ç–∞'
                """)
                print("‚úì –ö–æ–ª–æ–Ω–∫–∞ 'district' –¥–æ–±–∞–≤–ª–µ–Ω–∞")
            else:
                print("‚úì –ö–æ–ª–æ–Ω–∫–∞ 'district' —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
            
            # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è
            connection.commit()
            print("\n‚úÖ –ú–∏–≥—Ä–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞!")
            
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–µ–∫—É—â—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Ç–∞–±–ª–∏—Ü—ã
            print("\n–¢–µ–∫—É—â–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ —Ç–∞–±–ª–∏—Ü—ã patient_profiles:")
            cursor.execute("DESCRIBE patient_profiles")
            for row in cursor.fetchall():
                print(f"  {row[0]:20} | {row[1]:30} | {row[2]:5} | {row[3]:5}")
            
            return True
            
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –º–∏–≥—Ä–∞—Ü–∏–∏: {e}")
        connection.rollback()
        return False
    finally:
        connection.close()

if __name__ == "__main__":
    print("=== –ú–∏–≥—Ä–∞—Ü–∏—è –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø–æ–ª–µ–π –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏—è –≤ patient_profiles ===\n")
    
    success = add_patient_location_fields()
    
    if success:
        print("\nüéâ –ú–∏–≥—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!")
        print("–¢–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å backend: pm2 restart healzy-backend")
    else:
        print("\n‚ùå –ú–∏–≥—Ä–∞—Ü–∏—è –Ω–µ —É–¥–∞–ª–∞—Å—å!")
        sys.exit(1) 