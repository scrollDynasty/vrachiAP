#!/usr/bin/env python3
"""
–ú–∏–≥—Ä–∞—Ü–∏—è –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø–æ–ª—è accepted_at –≤ —Ç–∞–±–ª–∏—Ü—É calls
"""

import os
import sys
from sqlalchemy import create_engine, text
from dotenv import load_dotenv

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv()

# URL –¥–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
DATABASE_URL = "mysql+pymysql://vrachi_user:1435511926Ss..@localhost:3306/online_doctors_db"

def run_migration():
    """–í—ã–ø–æ–ª–Ω—è–µ—Ç –º–∏–≥—Ä–∞—Ü–∏—é –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø–æ–ª—è accepted_at"""
    
    engine = create_engine(DATABASE_URL, echo=True)
    
    try:
        with engine.connect() as connection:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —É–∂–µ –ø–æ–ª–µ accepted_at
            check_column_sql = """
            SELECT COUNT(*) as count
            FROM INFORMATION_SCHEMA.COLUMNS 
            WHERE TABLE_SCHEMA = 'online_doctors_db' 
            AND TABLE_NAME = 'calls' 
            AND COLUMN_NAME = 'accepted_at'
            """
            
            result = connection.execute(text(check_column_sql))
            row = result.fetchone()
            
            if row[0] > 0:
                print("‚úÖ –ü–æ–ª–µ 'accepted_at' —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –≤ —Ç–∞–±–ª–∏—Ü–µ 'calls'")
                return True
            
            # –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª–µ accepted_at
            print("‚ûï –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª–µ 'accepted_at' –≤ —Ç–∞–±–ª–∏—Ü—É 'calls'...")
            
            add_column_sql = """
            ALTER TABLE calls 
            ADD COLUMN accepted_at DATETIME NULL 
            AFTER started_at
            """
            
            connection.execute(text(add_column_sql))
            connection.commit()
            
            print("‚úÖ –ü–æ–ª–µ 'accepted_at' —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–æ –≤ —Ç–∞–±–ª–∏—Ü—É 'calls'")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø–æ–ª–µ –¥–æ–±–∞–≤–ª–µ–Ω–æ
            result = connection.execute(text(check_column_sql))
            row = result.fetchone()
            
            if row[0] > 0:
                print("‚úÖ –ú–∏–≥—Ä–∞—Ü–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!")
                return True
            else:
                print("‚ùå –û—à–∏–±–∫–∞: –ø–æ–ª–µ –Ω–µ –±—ã–ª–æ –¥–æ–±–∞–≤–ª–µ–Ω–æ")
                return False
                
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –º–∏–≥—Ä–∞—Ü–∏–∏: {e}")
        return False

if __name__ == "__main__":
    print("üîÑ –ó–∞–ø—É—Å–∫ –º–∏–≥—Ä–∞—Ü–∏–∏ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø–æ–ª—è accepted_at –≤ —Ç–∞–±–ª–∏—Ü—É calls...")
    success = run_migration()
    
    if success:
        print("üéâ –ú–∏–≥—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!")
        sys.exit(0)
    else:
        print("üí• –ú–∏–≥—Ä–∞—Ü–∏—è –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞!")
        sys.exit(1)