# backend/migration_add_news_translations.py

import pymysql
import os
from dotenv import load_dotenv

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv()

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
DB_CONFIG = {
    'host': 'localhost',
    'port': 3306,
    'user': 'vrachi_user',
    'password': '1435511926Ss..',
    'database': 'online_doctors_db',
    'charset': 'utf8mb4'
}

def run_migration():
    """–í—ã–ø–æ–ª–Ω–∏—Ç—å –º–∏–≥—Ä–∞—Ü–∏—é –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ç–∞–±–ª–∏—Ü—ã –ø–µ—Ä–µ–≤–æ–¥–æ–≤ –Ω–æ–≤–æ—Å—Ç–µ–π"""
    
    connection = None
    try:
        # –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
        connection = pymysql.connect(**DB_CONFIG)
        
        with connection.cursor() as cursor:
            print("üîÑ –ù–∞—á–∏–Ω–∞–µ–º –º–∏–≥—Ä–∞—Ü–∏—é –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ç–∞–±–ª–∏—Ü—ã news_translations...")
            
            # SQL –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ç–∞–±–ª–∏—Ü—ã –ø–µ—Ä–µ–≤–æ–¥–æ–≤ –Ω–æ–≤–æ—Å—Ç–µ–π
            create_table_sql = """
            CREATE TABLE IF NOT EXISTS news_translations (
                id INT AUTO_INCREMENT PRIMARY KEY,
                news_id INT NOT NULL,
                language_code VARCHAR(5) NOT NULL,
                title VARCHAR(255) NOT NULL,
                summary TEXT NOT NULL,
                content TEXT NOT NULL,
                category VARCHAR(100) NOT NULL,
                tags JSON NULL,
                created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
                updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
                
                FOREIGN KEY (news_id) REFERENCES news(id) ON DELETE CASCADE,
                UNIQUE KEY uq_news_translation (news_id, language_code),
                INDEX idx_news_translation_news_lang (news_id, language_code)
            ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
            """
            
            cursor.execute(create_table_sql)
            print("‚úÖ –¢–∞–±–ª–∏—Ü–∞ news_translations —Å–æ–∑–¥–∞–Ω–∞ —É—Å–ø–µ—à–Ω–æ")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å–æ–∑–¥–∞–ª–∞—Å—å –ª–∏ —Ç–∞–±–ª–∏—Ü–∞
            cursor.execute("SHOW TABLES LIKE 'news_translations'")
            result = cursor.fetchone()
            
            if result:
                print("‚úÖ –¢–∞–±–ª–∏—Ü–∞ news_translations –Ω–∞–π–¥–µ–Ω–∞ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö")
                
                # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Ç–∞–±–ª–∏—Ü—ã
                cursor.execute("DESCRIBE news_translations")
                columns = cursor.fetchall()
                print("üìã –°—Ç—Ä—É–∫—Ç—É—Ä–∞ —Ç–∞–±–ª–∏—Ü—ã news_translations:")
                for column in columns:
                    print(f"   - {column[0]}: {column[1]} {column[2] if column[2] else ''}")
            else:
                print("‚ùå –û—à–∏–±–∫–∞: —Ç–∞–±–ª–∏—Ü–∞ news_translations –Ω–µ –±—ã–ª–∞ —Å–æ–∑–¥–∞–Ω–∞")
                return False
            
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è
        connection.commit()
        print("‚úÖ –ú–∏–≥—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!")
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –º–∏–≥—Ä–∞—Ü–∏–∏: {e}")
        if connection:
            connection.rollback()
        return False
        
    finally:
        if connection:
            connection.close()

if __name__ == "__main__":
    print("üöÄ –ó–∞–ø—É—Å–∫ –º–∏–≥—Ä–∞—Ü–∏–∏ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ç–∞–±–ª–∏—Ü—ã –ø–µ—Ä–µ–≤–æ–¥–æ–≤ –Ω–æ–≤–æ—Å—Ç–µ–π")
    print("=" * 60)
    
    success = run_migration()
    
    print("=" * 60)
    if success:
        print("üéâ –ú–∏–≥—Ä–∞—Ü–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!")
        print("üìù –¢–µ–ø–µ—Ä—å –Ω–æ–≤–æ—Å—Ç–∏ –±—É–¥—É—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–µ—Ä–µ–≤–æ–¥–∏—Ç—å—Å—è –Ω–∞ —É–∑–±–µ–∫—Å–∫–∏–π –∏ –∞–Ω–≥–ª–∏–π—Å–∫–∏–π —è–∑—ã–∫–∏")
    else:
        print("üí• –ú–∏–≥—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–∏–ª–∞—Å—å —Å –æ—à–∏–±–∫–∞–º–∏")
    print("=" * 60) 