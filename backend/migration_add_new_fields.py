#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –º–∏–≥—Ä–∞—Ü–∏–∏ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –Ω–æ–≤—ã—Ö –ø–æ–ª–µ–π –≤ —Ç–∞–±–ª–∏—Ü—É doctor_profiles
- work_experience (JSON)
- city (VARCHAR)
- country (VARCHAR)
- languages (JSON)

–ó–∞–ø—É—Å–∫: python migration_add_new_fields.py
"""

import os
import sys
from sqlalchemy import create_engine, text
from sqlalchemy.exc import OperationalError
from dotenv import load_dotenv

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv()

# –ü–æ–ª—É—á–∞–µ–º URL –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
DATABASE_URL = os.getenv(
    "DATABASE_URL", "mysql+pymysql://vrachi_user:1435511926Ss..@localhost:3306/online_doctors_db"
)

def run_migration():
    """–í—ã–ø–æ–ª–Ω—è–µ—Ç –º–∏–≥—Ä–∞—Ü–∏—é –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö"""
    try:
        print("–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö...")
        engine = create_engine(DATABASE_URL)
        
        with engine.connect() as connection:
            print("–ù–∞—á–∏–Ω–∞–µ–º –º–∏–≥—Ä–∞—Ü–∏—é...")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É—é—Ç –ª–∏ —É–∂–µ –Ω–æ–≤—ã–µ –ø–æ–ª—è
            result = connection.execute(text("""
                SELECT COLUMN_NAME 
                FROM INFORMATION_SCHEMA.COLUMNS 
                WHERE TABLE_SCHEMA = DATABASE() 
                AND TABLE_NAME = 'doctor_profiles' 
                AND COLUMN_NAME IN ('work_experience', 'city', 'country', 'languages')
            """))
            existing_columns = [row[0] for row in result.fetchall()]
            
            # –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–µ –ø–æ–ª—è –µ—Å–ª–∏ –∏—Ö –Ω–µ—Ç
            if 'work_experience' not in existing_columns:
                print("–î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª–µ work_experience...")
                connection.execute(text("""
                    ALTER TABLE doctor_profiles 
                    ADD COLUMN work_experience JSON DEFAULT NULL 
                    COMMENT '–û–ø—ã—Ç —Ä–∞–±–æ—Ç—ã –≤—Ä–∞—á–∞ –≤ —Ñ–æ—Ä–º–∞—Ç–µ JSON'
                """))
                connection.commit()
                print("‚úì –ü–æ–ª–µ work_experience –¥–æ–±–∞–≤–ª–µ–Ω–æ")
            else:
                print("–ü–æ–ª–µ work_experience —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
            
            if 'city' not in existing_columns:
                print("–î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª–µ city...")
                connection.execute(text("""
                    ALTER TABLE doctor_profiles 
                    ADD COLUMN city VARCHAR(255) DEFAULT NULL 
                    COMMENT '–ì–æ—Ä–æ–¥, –≥–¥–µ —Ä–∞–±–æ—Ç–∞–µ—Ç –≤—Ä–∞—á'
                """))
                connection.commit()
                print("‚úì –ü–æ–ª–µ city –¥–æ–±–∞–≤–ª–µ–Ω–æ")
            else:
                print("–ü–æ–ª–µ city —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
            
            if 'country' not in existing_columns:
                print("–î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª–µ country...")
                connection.execute(text("""
                    ALTER TABLE doctor_profiles 
                    ADD COLUMN country VARCHAR(255) DEFAULT '–£–∑–±–µ–∫–∏—Å—Ç–∞–Ω' 
                    COMMENT '–°—Ç—Ä–∞–Ω–∞, –≥–¥–µ —Ä–∞–±–æ—Ç–∞–µ—Ç –≤—Ä–∞—á'
                """))
                connection.commit()
                print("‚úì –ü–æ–ª–µ country –¥–æ–±–∞–≤–ª–µ–Ω–æ")
            else:
                print("–ü–æ–ª–µ country —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
            
            if 'languages' not in existing_columns:
                print("–î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª–µ languages...")
                connection.execute(text("""
                    ALTER TABLE doctor_profiles 
                    ADD COLUMN languages JSON DEFAULT NULL 
                    COMMENT '–Ø–∑—ã–∫–∏, –Ω–∞ –∫–æ—Ç–æ—Ä—ã—Ö –≥–æ–≤–æ—Ä–∏—Ç –≤—Ä–∞—á, –≤ —Ñ–æ—Ä–º–∞—Ç–µ JSON'
                """))
                connection.commit()
                print("‚úì –ü–æ–ª–µ languages –¥–æ–±–∞–≤–ª–µ–Ω–æ")
            else:
                print("–ü–æ–ª–µ languages —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
            
            # –°–æ–∑–¥–∞–µ–º –∏–Ω–¥–µ–∫—Å—ã –¥–ª—è –ª—É—á—à–µ–π –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –ø–æ–∏—Å–∫–∞
            print("–°–æ–∑–¥–∞–µ–º –∏–Ω–¥–µ–∫—Å—ã...")
            try:
                connection.execute(text("""
                    CREATE INDEX idx_doctor_city ON doctor_profiles (city)
                """))
                connection.commit()
                print("‚úì –ò–Ω–¥–µ–∫—Å –¥–ª—è city —Å–æ–∑–¥–∞–Ω")
            except OperationalError as e:
                if "Duplicate key name" in str(e):
                    print("–ò–Ω–¥–µ–∫—Å –¥–ª—è city —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
                else:
                    print(f"–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∏–Ω–¥–µ–∫—Å–∞ –¥–ª—è city: {e}")
            
            try:
                connection.execute(text("""
                    CREATE INDEX idx_doctor_country ON doctor_profiles (country)
                """))
                connection.commit()
                print("‚úì –ò–Ω–¥–µ–∫—Å –¥–ª—è country —Å–æ–∑–¥–∞–Ω")
            except OperationalError as e:
                if "Duplicate key name" in str(e):
                    print("–ò–Ω–¥–µ–∫—Å –¥–ª—è country —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
                else:
                    print(f"–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∏–Ω–¥–µ–∫—Å–∞ –¥–ª—è country: {e}")
            
            print("\nüéâ –ú–∏–≥—Ä–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")
            print("\n–î–æ–±–∞–≤–ª–µ–Ω–Ω—ã–µ –ø–æ–ª—è:")
            print("- work_experience: JSON –º–∞—Å—Å–∏–≤ —Å –æ–ø—ã—Ç–æ–º —Ä–∞–±–æ—Ç—ã")
            print("- city: –ì–æ—Ä–æ–¥ –≤—Ä–∞—á–∞ (VARCHAR 255)")
            print("- country: –°—Ç—Ä–∞–Ω–∞ –≤—Ä–∞—á–∞ (VARCHAR 255, –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é '–£–∑–±–µ–∫–∏—Å—Ç–∞–Ω')")
            print("- languages: JSON –º–∞—Å—Å–∏–≤ —è–∑—ã–∫–æ–≤ –≤—Ä–∞—á–∞")
            print("\n–ò–Ω–¥–µ–∫—Å—ã —Å–æ–∑–¥–∞–Ω—ã –¥–ª—è –ø–æ–ª–µ–π city –∏ country –¥–ª—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ –ø–æ–∏—Å–∫–∞.")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –º–∏–≥—Ä–∞—Ü–∏–∏: {e}")
        return False
    
    return True

if __name__ == "__main__":
    print("=== –ú–∏–≥—Ä–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö Soglom ===")
    print("–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤—ã—Ö –ø–æ–ª–µ–π –≤ —Ç–∞–±–ª–∏—Ü—É doctor_profiles\n")
    
    success = run_migration()
    
    if success:
        print("\n‚úÖ –ú–∏–≥—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!")
        print("–¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å backend –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ.")
    else:
        print("\n‚ùå –ú–∏–≥—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–∏–ª–∞—Å—å —Å –æ—à–∏–±–∫–∞–º–∏!")
        sys.exit(1) 