
import os
import sys
from sqlalchemy import create_engine, text
from sqlalchemy.exc import OperationalError
from dotenv import load_dotenv

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv()

# –ü–æ–ª—É—á–∞–µ–º URL –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
DATABASE_URL = os.getenv(
    "DATABASE_URL", "mysql+pymysql://vrachi_user:1435511926Ss..@localhost:3306/online_doctors_db"
)

def run_migration():
    """–í—ã–ø–æ–ª–Ω—è–µ—Ç –º–∏–≥—Ä–∞—Ü–∏—é –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –¥–ª—è AI —Å–∏—Å—Ç–µ–º—ã"""
    try:
        print("ü§ñ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –º–∏–≥—Ä–∞—Ü–∏–∏ AI —Å–∏—Å—Ç–µ–º—ã...")
        engine = create_engine(DATABASE_URL)
        
        with engine.connect() as connection:
            print("üìã –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ AI —Ç–∞–±–ª–∏—Ü—ã...")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∫–∞–∫–∏–µ —Ç–∞–±–ª–∏—Ü—ã —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É—é—Ç
            result = connection.execute(text("""
                SELECT TABLE_NAME 
                FROM INFORMATION_SCHEMA.TABLES 
                WHERE TABLE_SCHEMA = DATABASE() 
                AND TABLE_NAME IN (
                    'ai_diagnoses', 'ai_training_data', 'ai_models', 
                    'ai_model_training', 'ai_feedback', 'ai_conversations',
                    'ai_conversation_messages', 'ai_conversation_feedback',
                    'ai_conversation_training'
                )
            """))
            existing_tables = [row[0] for row in result.fetchall()]
            
            # 1. –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—É ai_diagnoses
            if 'ai_diagnoses' not in existing_tables:
                print("üìä –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—É ai_diagnoses...")
                connection.execute(text("""
                    CREATE TABLE ai_diagnoses (
                        id INT AUTO_INCREMENT PRIMARY KEY,
                        patient_id INT NOT NULL,
                        symptoms_description TEXT NOT NULL,
                        patient_age INT NULL,
                        patient_gender VARCHAR(10) NULL,
                        additional_info TEXT NULL,
                        extracted_symptoms JSON NULL,
                        possible_diseases JSON NULL,
                        recommendations JSON NULL,
                        urgency_level VARCHAR(20) NULL,
                        confidence_score FLOAT NULL,
                        processing_time FLOAT NULL,
                        model_version VARCHAR(50) NULL,
                        request_id VARCHAR(100) NULL,
                        feedback_rating INT NULL,
                        feedback_comment TEXT NULL,
                        created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
                        updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
                        FOREIGN KEY (patient_id) REFERENCES users(id) ON DELETE CASCADE,
                        INDEX idx_ai_diagnosis_patient (patient_id),
                        INDEX idx_ai_diagnosis_created (created_at),
                        INDEX idx_ai_diagnosis_urgency (urgency_level),
                        INDEX idx_ai_diagnosis_request (request_id)
                    ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci
                """))
                connection.commit()
                print("‚úÖ –¢–∞–±–ª–∏—Ü–∞ ai_diagnoses —Å–æ–∑–¥–∞–Ω–∞")
            else:
                print("‚ö†Ô∏è –¢–∞–±–ª–∏—Ü–∞ ai_diagnoses —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
            
            # 2. –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—É ai_training_data
            if 'ai_training_data' not in existing_tables:
                print("üìö –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—É ai_training_data...")
                connection.execute(text("""
                    CREATE TABLE ai_training_data (
                        id INT AUTO_INCREMENT PRIMARY KEY,
                        source_name VARCHAR(100) NOT NULL,
                        source_url VARCHAR(512) NULL,
                        title VARCHAR(255) NOT NULL,
                        content TEXT NOT NULL,
                        symptoms JSON NULL,
                        diseases JSON NULL,
                        treatments JSON NULL,
                        language VARCHAR(10) NOT NULL DEFAULT 'en',
                        category VARCHAR(100) NULL,
                        quality_score FLOAT NULL,
                        is_processed BOOLEAN DEFAULT FALSE,
                        is_validated BOOLEAN DEFAULT FALSE,
                        created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
                        updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
                        INDEX idx_training_data_source (source_name),
                        INDEX idx_training_data_language (language),
                        INDEX idx_training_data_processed (is_processed),
                        INDEX idx_training_data_created (created_at)
                    ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci
                """))
                connection.commit()
                print("‚úÖ –¢–∞–±–ª–∏—Ü–∞ ai_training_data —Å–æ–∑–¥–∞–Ω–∞")
            else:
                print("‚ö†Ô∏è –¢–∞–±–ª–∏—Ü–∞ ai_training_data —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
            
            # 3. –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—É ai_models
            if 'ai_models' not in existing_tables:
                print("üß† –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—É ai_models...")
                connection.execute(text("""
                    CREATE TABLE ai_models (
                        id INT AUTO_INCREMENT PRIMARY KEY,
                        name VARCHAR(100) NOT NULL,
                        model_type VARCHAR(50) NOT NULL,
                        version VARCHAR(20) NOT NULL,
                        description TEXT NULL,
                        model_path VARCHAR(512) NOT NULL,
                        config_path VARCHAR(512) NULL,
                        accuracy FLOAT NULL,
                        `precision` FLOAT NULL,
                        recall FLOAT NULL,
                        f1_score FLOAT NULL,
                        training_data_size INT NULL,
                        validation_data_size INT NULL,
                        training_time FLOAT NULL,
                        epochs INT NULL,
                        is_active BOOLEAN DEFAULT FALSE,
                        is_production BOOLEAN DEFAULT FALSE,
                        created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
                        updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
                        INDEX idx_ai_model_name_version (name, version),
                        INDEX idx_ai_model_type (model_type),
                        INDEX idx_ai_model_active (is_active),
                        INDEX idx_ai_model_production (is_production),
                        UNIQUE KEY uq_ai_model_name_version (name, version)
                    ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci
                """))
                connection.commit()
                print("‚úÖ –¢–∞–±–ª–∏—Ü–∞ ai_models —Å–æ–∑–¥–∞–Ω–∞")
            else:
                print("‚ö†Ô∏è –¢–∞–±–ª–∏—Ü–∞ ai_models —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
            
            # 4. –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—É ai_model_training
            if 'ai_model_training' not in existing_tables:
                print("üèãÔ∏è –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—É ai_model_training...")
                connection.execute(text("""
                    CREATE TABLE ai_model_training (
                        id INT AUTO_INCREMENT PRIMARY KEY,
                        model_id INT NOT NULL,
                        training_parameters JSON NULL,
                        training_data_ids JSON NULL,
                        training_log TEXT NULL,
                        final_metrics JSON NULL,
                        status VARCHAR(20) DEFAULT 'pending',
                        error_message TEXT NULL,
                        started_at DATETIME NULL,
                        completed_at DATETIME NULL,
                        duration FLOAT NULL,
                        created_by INT NULL,
                        created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
                        FOREIGN KEY (model_id) REFERENCES ai_models(id) ON DELETE CASCADE,
                        FOREIGN KEY (created_by) REFERENCES users(id) ON DELETE SET NULL,
                        INDEX idx_training_model (model_id),
                        INDEX idx_training_status (status),
                        INDEX idx_training_created (created_at)
                    ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci
                """))
                connection.commit()
                print("‚úÖ –¢–∞–±–ª–∏—Ü–∞ ai_model_training —Å–æ–∑–¥–∞–Ω–∞")
            else:
                print("‚ö†Ô∏è –¢–∞–±–ª–∏—Ü–∞ ai_model_training —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
            
            # 5. –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—É ai_feedback
            if 'ai_feedback' not in existing_tables:
                print("üí≠ –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—É ai_feedback...")
                connection.execute(text("""
                    CREATE TABLE ai_feedback (
                        id INT AUTO_INCREMENT PRIMARY KEY,
                        diagnosis_id INT NOT NULL,
                        user_id INT NOT NULL,
                        rating INT NOT NULL,
                        comment TEXT NULL,
                        symptoms_accuracy INT NULL,
                        disease_accuracy INT NULL,
                        recommendations_usefulness INT NULL,
                        actual_diagnosis VARCHAR(255) NULL,
                        doctor_feedback TEXT NULL,
                        created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
                        FOREIGN KEY (diagnosis_id) REFERENCES ai_diagnoses(id) ON DELETE CASCADE,
                        FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE,
                        INDEX idx_feedback_diagnosis (diagnosis_id),
                        INDEX idx_feedback_user (user_id),
                        INDEX idx_feedback_rating (rating),
                        INDEX idx_feedback_created (created_at)
                    ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci
                """))
                connection.commit()
                print("‚úÖ –¢–∞–±–ª–∏—Ü–∞ ai_feedback —Å–æ–∑–¥–∞–Ω–∞")
            else:
                print("‚ö†Ô∏è –¢–∞–±–ª–∏—Ü–∞ ai_feedback —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
            
            # 6. –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—É ai_conversations
            if 'ai_conversations' not in existing_tables:
                print("üí¨ –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—É ai_conversations...")
                connection.execute(text("""
                    CREATE TABLE ai_conversations (
                        id INT AUTO_INCREMENT PRIMARY KEY,
                        session_id VARCHAR(100) UNIQUE NOT NULL,
                        patient_id INT NOT NULL,
                        patient_info JSON NULL,
                        current_symptoms JSON NULL,
                        suspected_conditions JSON NULL,
                        urgency_level VARCHAR(20) DEFAULT 'low',
                        conversation_stage VARCHAR(50) DEFAULT 'greeting',
                        status VARCHAR(20) DEFAULT 'active',
                        created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
                        updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
                        ended_at DATETIME NULL,
                        final_recommendations JSON NULL,
                        conversation_summary TEXT NULL,
                        FOREIGN KEY (patient_id) REFERENCES users(id) ON DELETE CASCADE,
                        INDEX idx_ai_conversation_session (session_id),
                        INDEX idx_ai_conversation_patient (patient_id),
                        INDEX idx_ai_conversation_status (status),
                        INDEX idx_ai_conversation_created (created_at)
                    ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci
                """))
                connection.commit()
                print("‚úÖ –¢–∞–±–ª–∏—Ü–∞ ai_conversations —Å–æ–∑–¥–∞–Ω–∞")
            else:
                print("‚ö†Ô∏è –¢–∞–±–ª–∏—Ü–∞ ai_conversations —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
            
            # 7. –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—É ai_conversation_messages
            if 'ai_conversation_messages' not in existing_tables:
                print("üì® –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—É ai_conversation_messages...")
                connection.execute(text("""
                    CREATE TABLE ai_conversation_messages (
                        id INT AUTO_INCREMENT PRIMARY KEY,
                        conversation_id INT NOT NULL,
                        sender_role VARCHAR(20) NOT NULL,
                        message TEXT NOT NULL,
                        message_context JSON NULL,
                        processing_time FLOAT NULL,
                        confidence_score FLOAT NULL,
                        sent_at DATETIME DEFAULT CURRENT_TIMESTAMP,
                        FOREIGN KEY (conversation_id) REFERENCES ai_conversations(id) ON DELETE CASCADE,
                        INDEX idx_ai_message_conversation (conversation_id),
                        INDEX idx_ai_message_sender (sender_role),
                        INDEX idx_ai_message_sent (sent_at)
                    ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci
                """))
                connection.commit()
                print("‚úÖ –¢–∞–±–ª–∏—Ü–∞ ai_conversation_messages —Å–æ–∑–¥–∞–Ω–∞")
            else:
                print("‚ö†Ô∏è –¢–∞–±–ª–∏—Ü–∞ ai_conversation_messages —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
            
            # 8. –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—É ai_conversation_feedback
            if 'ai_conversation_feedback' not in existing_tables:
                print("‚≠ê –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—É ai_conversation_feedback...")
                connection.execute(text("""
                    CREATE TABLE ai_conversation_feedback (
                        id INT AUTO_INCREMENT PRIMARY KEY,
                        conversation_id INT NOT NULL,
                        patient_id INT NOT NULL,
                        overall_rating INT NOT NULL,
                        conversation_quality INT NULL,
                        medical_accuracy INT NULL,
                        helpfulness INT NULL,
                        ai_empathy INT NULL,
                        comment TEXT NULL,
                        improvement_suggestions TEXT NULL,
                        was_helpful BOOLEAN NULL,
                        would_recommend BOOLEAN NULL,
                        created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
                        FOREIGN KEY (conversation_id) REFERENCES ai_conversations(id) ON DELETE CASCADE,
                        FOREIGN KEY (patient_id) REFERENCES users(id) ON DELETE CASCADE,
                        INDEX idx_conversation_feedback_conversation (conversation_id),
                        INDEX idx_conversation_feedback_patient (patient_id),
                        INDEX idx_conversation_feedback_rating (overall_rating),
                        INDEX idx_conversation_feedback_created (created_at)
                    ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci
                """))
                connection.commit()
                print("‚úÖ –¢–∞–±–ª–∏—Ü–∞ ai_conversation_feedback —Å–æ–∑–¥–∞–Ω–∞")
            else:
                print("‚ö†Ô∏è –¢–∞–±–ª–∏—Ü–∞ ai_conversation_feedback —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
            
            # 9. –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—É ai_conversation_training
            if 'ai_conversation_training' not in existing_tables:
                print("üéì –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—É ai_conversation_training...")
                connection.execute(text("""
                    CREATE TABLE ai_conversation_training (
                        id INT AUTO_INCREMENT PRIMARY KEY,
                        conversation_id INT NOT NULL,
                        training_data JSON NOT NULL,
                        correct_responses JSON NULL,
                        incorrect_responses JSON NULL,
                        is_processed BOOLEAN DEFAULT FALSE,
                        is_validated BOOLEAN DEFAULT FALSE,
                        quality_score FLOAT NULL,
                        created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
                        FOREIGN KEY (conversation_id) REFERENCES ai_conversations(id) ON DELETE CASCADE,
                        INDEX idx_conversation_training_conversation (conversation_id),
                        INDEX idx_conversation_training_processed (is_processed),
                        INDEX idx_conversation_training_validated (is_validated),
                        INDEX idx_conversation_training_created (created_at)
                    ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci
                """))
                connection.commit()
                print("‚úÖ –¢–∞–±–ª–∏—Ü–∞ ai_conversation_training —Å–æ–∑–¥–∞–Ω–∞")
            else:
                print("‚ö†Ô∏è –¢–∞–±–ª–∏—Ü–∞ ai_conversation_training —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
            
            print("\nüéâ –ú–∏–≥—Ä–∞—Ü–∏—è AI —Å–∏—Å—Ç–µ–º—ã —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")
            print("\nüìä –°–æ–∑–¥–∞–Ω–Ω—ã–µ —Ç–∞–±–ª–∏—Ü—ã:")
            print("1. ai_diagnoses - —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã AI –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏")
            print("2. ai_training_data - –¥–∞–Ω–Ω—ã–µ –¥–ª—è –æ–±—É—á–µ–Ω–∏—è –º–æ–¥–µ–ª–∏")
            print("3. ai_models - –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ AI –º–æ–¥–µ–ª—è—Ö")
            print("4. ai_model_training - –∏—Å—Ç–æ—Ä–∏—è –æ–±—É—á–µ–Ω–∏—è –º–æ–¥–µ–ª–µ–π")
            print("5. ai_feedback - –æ–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å –ø–æ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–µ")
            print("6. ai_conversations - —Å–µ—Å—Å–∏–∏ —Ä–∞–∑–≥–æ–≤–æ—Ä–∞ —Å AI –≤—Ä–∞—á–æ–º")
            print("7. ai_conversation_messages - —Å–æ–æ–±—â–µ–Ω–∏—è –≤ —Ä–∞–∑–≥–æ–≤–æ—Ä–µ")
            print("8. ai_conversation_feedback - –æ–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å –ø–æ —Ä–∞–∑–≥–æ–≤–æ—Ä–∞–º")
            print("9. ai_conversation_training - –¥–∞–Ω–Ω—ã–µ –¥–ª—è –æ–±—É—á–µ–Ω–∏—è")
            print("\nüîß –í—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –∏–Ω–¥–µ–∫—Å—ã –∏ –≤–Ω–µ—à–Ω–∏–µ –∫–ª—é—á–∏ —Å–æ–∑–¥–∞–Ω—ã")
            print("üíæ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –≥–æ—Ç–æ–≤–∞ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å AI —Å–∏—Å—Ç–µ–º–æ–π!")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –º–∏–≥—Ä–∞—Ü–∏–∏: {e}")
        return False
    
    return True

if __name__ == "__main__":
    print("=" * 60)
    print("ü§ñ –ú–ò–ì–†–ê–¶–ò–Ø AI –°–ò–°–¢–ï–ú–´ –ú–ï–î–ò–¶–ò–ù–°–ö–û–ô –î–ò–ê–ì–ù–û–°–¢–ò–ö–ò")
    print("=" * 60)
    print("–°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –Ω–µ–π—Ä–æ—Å–µ—Ç—å—é\n")
    
    success = run_migration()
    
    if success:
        print("\n‚úÖ –ú–∏–≥—Ä–∞—Ü–∏—è AI —Å–∏—Å—Ç–µ–º—ã –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!")
        print("üöÄ –¢–µ–ø–µ—Ä—å –º–æ–∂–µ—Ç–µ –∑–∞–ø—É—Å—Ç–∏—Ç—å AI —Å–∏—Å—Ç–µ–º—É:")
        print("   python ai_system/setup_and_train.py")
        print("   python start_ai.py")
    else:
        print("\n‚ùå –ú–∏–≥—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–∏–ª–∞—Å—å —Å –æ—à–∏–±–∫–∞–º–∏!")
        print("üìã –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –∏ –ø—Ä–∞–≤–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
        sys.exit(1) 